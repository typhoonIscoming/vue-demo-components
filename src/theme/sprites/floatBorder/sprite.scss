// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$border1-name: 'border1';
$border1-x: 301px;
$border1-y: 90px;
$border1-offset-x: -301px/2;
$border1-offset-y: -90px/2;
$border1-width: 133px/2;
$border1-height: 88px/2;
$border1-total-width: 572px/2;
$border1-total-height: 377px/2;
$border1-image: '~@/assets/sprites/floatBorder/sprite.png';
$border1: (301px, 90px, -301px/2, -90px/2, 133px/2, 88px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border1', );
$border10-name: 'border10';
$border10-x: 443px;
$border10-y: 0px;
$border10-offset-x: -443px/2;
$border10-offset-y: 0px/2;
$border10-width: 129px/2;
$border10-height: 87px/2;
$border10-total-width: 572px/2;
$border10-total-height: 377px/2;
$border10-image: '~@/assets/sprites/floatBorder/sprite.png';
$border10: (443px, 0px, -443px/2, 0px/2, 129px/2, 87px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border10', );
$border11-name: 'border11';
$border11-x: 136px;
$border11-y: 196px;
$border11-offset-x: -136px/2;
$border11-offset-y: -196px/2;
$border11-width: 136px/2;
$border11-height: 88px/2;
$border11-total-width: 572px/2;
$border11-total-height: 377px/2;
$border11-image: '~@/assets/sprites/floatBorder/sprite.png';
$border11: (136px, 196px, -136px/2, -196px/2, 136px/2, 88px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border11', );
$border12-name: 'border12';
$border12-x: 301px;
$border12-y: 0px;
$border12-offset-x: -301px/2;
$border12-offset-y: 0px/2;
$border12-width: 138px/2;
$border12-height: 86px/2;
$border12-total-width: 572px/2;
$border12-total-height: 377px/2;
$border12-image: '~@/assets/sprites/floatBorder/sprite.png';
$border12: (301px, 0px, -301px/2, 0px/2, 138px/2, 86px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border12', );
$border2-name: 'border2';
$border2-x: 137px;
$border2-y: 291px;
$border2-offset-x: -137px/2;
$border2-offset-y: -291px/2;
$border2-width: 135px/2;
$border2-height: 82px/2;
$border2-total-width: 572px/2;
$border2-total-height: 377px/2;
$border2-image: '~@/assets/sprites/floatBorder/sprite.png';
$border2: (137px, 291px, -137px/2, -291px/2, 135px/2, 82px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border2', );
$border3-name: 'border3';
$border3-x: 0px;
$border3-y: 92px;
$border3-offset-x: 0px/2;
$border3-offset-y: -92px/2;
$border3-width: 136px/2;
$border3-height: 100px/2;
$border3-total-width: 572px/2;
$border3-total-height: 377px/2;
$border3-image: '~@/assets/sprites/floatBorder/sprite.png';
$border3: (0px, 92px, 0px/2, -92px/2, 136px/2, 100px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border3', );
$border4-name: 'border4';
$border4-x: 0px;
$border4-y: 291px;
$border4-offset-x: 0px/2;
$border4-offset-y: -291px/2;
$border4-width: 133px/2;
$border4-height: 86px/2;
$border4-total-width: 572px/2;
$border4-total-height: 377px/2;
$border4-image: '~@/assets/sprites/floatBorder/sprite.png';
$border4: (0px, 291px, 0px/2, -291px/2, 133px/2, 86px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border4', );
$border5-name: 'border5';
$border5-x: 0px;
$border5-y: 196px;
$border5-offset-x: 0px/2;
$border5-offset-y: -196px/2;
$border5-width: 132px/2;
$border5-height: 91px/2;
$border5-total-width: 572px/2;
$border5-total-height: 377px/2;
$border5-image: '~@/assets/sprites/floatBorder/sprite.png';
$border5: (0px, 196px, 0px/2, -196px/2, 132px/2, 91px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border5', );
$border6-name: 'border6';
$border6-x: 160px;
$border6-y: 92px;
$border6-offset-x: -160px/2;
$border6-offset-y: -92px/2;
$border6-width: 137px/2;
$border6-height: 88px/2;
$border6-total-width: 572px/2;
$border6-total-height: 377px/2;
$border6-image: '~@/assets/sprites/floatBorder/sprite.png';
$border6: (160px, 92px, -160px/2, -92px/2, 137px/2, 88px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border6', );
$border7-name: 'border7';
$border7-x: 160px;
$border7-y: 0px;
$border7-offset-x: -160px/2;
$border7-offset-y: 0px/2;
$border7-width: 137px/2;
$border7-height: 88px/2;
$border7-total-width: 572px/2;
$border7-total-height: 377px/2;
$border7-image: '~@/assets/sprites/floatBorder/sprite.png';
$border7: (160px, 0px, -160px/2, 0px/2, 137px/2, 88px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border7', );
$border8-name: 'border8';
$border8-x: 301px;
$border8-y: 182px;
$border8-offset-x: -301px/2;
$border8-offset-y: -182px/2;
$border8-width: 136px/2;
$border8-height: 86px/2;
$border8-total-width: 572px/2;
$border8-total-height: 377px/2;
$border8-image: '~@/assets/sprites/floatBorder/sprite.png';
$border8: (301px, 182px, -301px/2, -182px/2, 136px/2, 86px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border8', );
$border9-name: 'border9';
$border9-x: 0px;
$border9-y: 0px;
$border9-offset-x: 0px/2;
$border9-offset-y: 0px/2;
$border9-width: 156px/2;
$border9-height: 88px/2;
$border9-total-width: 572px/2;
$border9-total-height: 377px/2;
$border9-image: '~@/assets/sprites/floatBorder/sprite.png';
$border9: (0px, 0px, 0px/2, 0px/2, 156px/2, 88px/2, 572px/2, 377px/2, '~@/assets/sprites/floatBorder/sprite.png', 'border9', );
$spritesheet-width: 572px;
$spritesheet-height: 377px;
$spritesheet-image: '~@/assets/sprites/floatBorder/sprite.png';
$spritesheet-sprites: ($border1, $border10, $border11, $border12, $border2, $border3, $border4, $border5, $border6, $border7, $border8, $border9, );
$spritesheet: (572px, 377px, '~@/assets/sprites/floatBorder/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-background-size($sprite) {
  background-size: nth($sprite, 7) nth($sprite, 8);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}


@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
  @include sprite-background-size($sprite);
  background-repeat: no-repeat;
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
