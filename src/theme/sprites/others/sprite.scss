// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bgcolor-name: 'bgcolor';
$bgcolor-x: 0px;
$bgcolor-y: 0px;
$bgcolor-offset-x: 0px/2;
$bgcolor-offset-y: 0px/2;
$bgcolor-width: 94px/2;
$bgcolor-height: 56px/2;
$bgcolor-total-width: 216px/2;
$bgcolor-total-height: 165px/2;
$bgcolor-image: '~@/assets/sprites/others/sprite.png';
$bgcolor: (0px, 0px, 0px/2, 0px/2, 94px/2, 56px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'bgcolor', );
$decorate-name: 'decorate';
$decorate-x: 98px;
$decorate-y: 0px;
$decorate-offset-x: -98px/2;
$decorate-offset-y: 0px/2;
$decorate-width: 118px/2;
$decorate-height: 43px/2;
$decorate-total-width: 216px/2;
$decorate-total-height: 165px/2;
$decorate-image: '~@/assets/sprites/others/sprite.png';
$decorate: (98px, 0px, -98px/2, 0px/2, 118px/2, 43px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'decorate', );
$decorate5-name: 'decorate5';
$decorate5-x: 107px;
$decorate5-y: 114px;
$decorate5-offset-x: -107px/2;
$decorate5-offset-y: -114px/2;
$decorate5-width: 65px/2;
$decorate5-height: 30px/2;
$decorate5-total-width: 216px/2;
$decorate5-total-height: 165px/2;
$decorate5-image: '~@/assets/sprites/others/sprite.png';
$decorate5: (107px, 114px, -107px/2, -114px/2, 65px/2, 30px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'decorate5', );
$decorate9-name: 'decorate9';
$decorate9-x: 56px;
$decorate9-y: 114px;
$decorate9-offset-x: -56px/2;
$decorate9-offset-y: -114px/2;
$decorate9-width: 47px/2;
$decorate9-height: 46px/2;
$decorate9-total-width: 216px/2;
$decorate9-total-height: 165px/2;
$decorate9-image: '~@/assets/sprites/others/sprite.png';
$decorate9: (56px, 114px, -56px/2, -114px/2, 47px/2, 46px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'decorate9', );
$number-name: 'number';
$number-x: 98px;
$number-y: 60px;
$number-offset-x: -98px/2;
$number-offset-y: -60px/2;
$number-width: 69px/2;
$number-height: 49px/2;
$number-total-width: 216px/2;
$number-total-height: 165px/2;
$number-image: '~@/assets/sprites/others/sprite.png';
$number: (98px, 60px, -98px/2, -60px/2, 69px/2, 49px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'number', );
$time-name: 'time';
$time-x: 0px;
$time-y: 60px;
$time-offset-x: 0px/2;
$time-offset-y: -60px/2;
$time-width: 94px/2;
$time-height: 50px/2;
$time-total-width: 216px/2;
$time-total-height: 165px/2;
$time-image: '~@/assets/sprites/others/sprite.png';
$time: (0px, 60px, 0px/2, -60px/2, 94px/2, 50px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'time', );
$title-name: 'title';
$title-x: 0px;
$title-y: 114px;
$title-offset-x: 0px/2;
$title-offset-y: -114px/2;
$title-width: 52px/2;
$title-height: 51px/2;
$title-total-width: 216px/2;
$title-total-height: 165px/2;
$title-image: '~@/assets/sprites/others/sprite.png';
$title: (0px, 114px, 0px/2, -114px/2, 52px/2, 51px/2, 216px/2, 165px/2, '~@/assets/sprites/others/sprite.png', 'title', );
$spritesheet-width: 216px;
$spritesheet-height: 165px;
$spritesheet-image: '~@/assets/sprites/others/sprite.png';
$spritesheet-sprites: ($bgcolor, $decorate, $decorate5, $decorate9, $number, $time, $title, );
$spritesheet: (216px, 165px, '~@/assets/sprites/others/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-background-size($sprite) {
  background-size: nth($sprite, 7) nth($sprite, 8);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}


@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
  @include sprite-background-size($sprite);
  background-repeat: no-repeat;
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
