// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bar-name: 'bar';
$bar-x: 127px;
$bar-y: 0px;
$bar-offset-x: -127px/2;
$bar-offset-y: 0px/2;
$bar-width: 121px/2;
$bar-height: 91px/2;
$bar-total-width: 450px/2;
$bar-total-height: 298px/2;
$bar-image: '~@/assets/sprites/chart/sprite.png';
$bar: (127px, 0px, -127px/2, 0px/2, 121px/2, 91px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'bar', );
$line-name: 'line';
$line-x: 0px;
$line-y: 0px;
$line-offset-x: 0px/2;
$line-offset-y: 0px/2;
$line-width: 123px/2;
$line-height: 94px/2;
$line-total-width: 450px/2;
$line-total-height: 298px/2;
$line-image: '~@/assets/sprites/chart/sprite.png';
$line: (0px, 0px, 0px/2, 0px/2, 123px/2, 94px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'line', );
$pie-name: 'pie';
$pie-x: 252px;
$pie-y: 100px;
$pie-offset-x: -252px/2;
$pie-offset-y: -100px/2;
$pie-width: 96px/2;
$pie-height: 94px/2;
$pie-total-width: 450px/2;
$pie-total-height: 298px/2;
$pie-image: '~@/assets/sprites/chart/sprite.png';
$pie: (252px, 100px, -252px/2, -100px/2, 96px/2, 94px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'pie', );
$radar-name: 'radar';
$radar-x: 0px;
$radar-y: 98px;
$radar-offset-x: 0px/2;
$radar-offset-y: -98px/2;
$radar-width: 108px/2;
$radar-height: 106px/2;
$radar-total-width: 450px/2;
$radar-total-height: 298px/2;
$radar-image: '~@/assets/sprites/chart/sprite.png';
$radar: (0px, 98px, 0px/2, -98px/2, 108px/2, 106px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'radar', );
$ranklist-name: 'ranklist';
$ranklist-x: 0px;
$ranklist-y: 208px;
$ranklist-offset-x: 0px/2;
$ranklist-offset-y: -208px/2;
$ranklist-width: 107px/2;
$ranklist-height: 90px/2;
$ranklist-total-width: 450px/2;
$ranklist-total-height: 298px/2;
$ranklist-image: '~@/assets/sprites/chart/sprite.png';
$ranklist: (0px, 208px, 0px/2, -208px/2, 107px/2, 90px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'ranklist', );
$ring-name: 'ring';
$ring-x: 127px;
$ring-y: 95px;
$ring-offset-x: -127px/2;
$ring-offset-y: -95px/2;
$ring-width: 97px/2;
$ring-height: 104px/2;
$ring-total-width: 450px/2;
$ring-total-height: 298px/2;
$ring-image: '~@/assets/sprites/chart/sprite.png';
$ring: (127px, 95px, -127px/2, -95px/2, 97px/2, 104px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'ring', );
$scroll-name: 'scroll';
$scroll-x: 111px;
$scroll-y: 208px;
$scroll-offset-x: -111px/2;
$scroll-offset-y: -208px/2;
$scroll-width: 94px/2;
$scroll-height: 88px/2;
$scroll-total-width: 450px/2;
$scroll-total-height: 298px/2;
$scroll-image: '~@/assets/sprites/chart/sprite.png';
$scroll: (111px, 208px, -111px/2, -208px/2, 94px/2, 88px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'scroll', );
$water-name: 'water';
$water-x: 358px;
$water-y: 0px;
$water-offset-x: -358px/2;
$water-offset-y: 0px/2;
$water-width: 92px/2;
$water-height: 92px/2;
$water-total-width: 450px/2;
$water-total-height: 298px/2;
$water-image: '~@/assets/sprites/chart/sprite.png';
$water: (358px, 0px, -358px/2, 0px/2, 92px/2, 92px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'water', );
$worldcloud-name: 'worldcloud';
$worldcloud-x: 252px;
$worldcloud-y: 0px;
$worldcloud-offset-x: -252px/2;
$worldcloud-offset-y: 0px/2;
$worldcloud-width: 102px/2;
$worldcloud-height: 96px/2;
$worldcloud-total-width: 450px/2;
$worldcloud-total-height: 298px/2;
$worldcloud-image: '~@/assets/sprites/chart/sprite.png';
$worldcloud: (252px, 0px, -252px/2, 0px/2, 102px/2, 96px/2, 450px/2, 298px/2, '~@/assets/sprites/chart/sprite.png', 'worldcloud', );
$spritesheet-width: 450px;
$spritesheet-height: 298px;
$spritesheet-image: '~@/assets/sprites/chart/sprite.png';
$spritesheet-sprites: ($bar, $line, $pie, $radar, $ranklist, $ring, $scroll, $water, $worldcloud, );
$spritesheet: (450px, 298px, '~@/assets/sprites/chart/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-background-size($sprite) {
  background-size: nth($sprite, 7) nth($sprite, 8);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}


@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
  @include sprite-background-size($sprite);
  background-repeat: no-repeat;
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
